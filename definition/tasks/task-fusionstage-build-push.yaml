apiVersion: devops.alauda.io/v1alpha1
kind: PipelineTaskTemplate
metadata:
  name: build-docker-fusionstage
  annotations:
    alauda.io/displayName.zh-CN: "Docker 构建并上传镜像到 fusionstage"
    alauda.io/displayName.en: "Docker Build with fusionstage"
    alauda.io/description.zh-CN: "Docker 构建并上传镜像到 fusionstage"
    alauda.io/description.en: "Docker Build with fusionstage"
    alauda.io/readme.zh-CN: "Docker 构建并上传镜像到 fusionstage"
    alauda.io/readme.en: "Docker Build with fusionstage"
    alauda.io/version: "1.0.0"
    alauda.io/style.icon: ""
  labels:
    category: CI
spec:
  engine: gotpl
  body: |+
    script {
        def retryCount = {{ if .retry }}{{ .retry }}{{else}}0{{end}}
        env.TIMESTAMP = env.BUILD_TIMESTAMP

        dir(RELATIVE_DIRECTORY) {

        try{
              container('tools'){
                  retry(retryCount) {
                    sh '''
                        EXIT_STATUS=0
                        export imageRepo="{{.imageRepository}}:{{.imageTag}}" || EXIT_STATUS=$?
                        export token=$(curl -sik -H "Accept:application/json" -H "Content-Type:application/json;charset=utf8" -XPOST {{.imageAuthAPI}} -d '{"auth": {"identity": {"methods": ["password"], "password": {"user": {"name": "{{.imageAuthUserName}}", "password": "{{.imageAuthPassword}}", "domain": {"name": "{{.imageAuthDomainName}}"}}}}, "scope": {"domain": {"name": "{{.imageAuthDomainName}}"}}}}' | awk '/Token/{print $2}' | cut -c1-1312) || EXIT_STATUS=$?
                        docker login 103.160.25.35:32005 -u admin -p Harbor12345 || EXIT_STATUS=$?
                        docker build -t ${imageRepo} -f {{.dockerfile}} {{.buildArguments}} {{ if .context }}{{.context}}{{else}}.{{end}} || EXIT_STATUS=$?
                        docker save ${imageRepo} | gzip > image.tar.gz || EXIT_STATUS=$?
                        curl -k -XPUT -H "X-Auth-Token: ${token}" -H "Content-Type: multipart/form-data" -F "file=@image.tar.gz" {{.remoteImageAPI}} || EXIT_STATUS=$?
                        exit $EXIT_STATUS
                    '''
                  }
              }
           }catch(Exception err){
                {{if .EnableJira -}}
                def testIssue = [fields: [
                   project: [key: '{{.projectKey}}'],
                   summary: "{{.summary}}",
                   description: "{{.description}}",
                   issuetype: [id: '{{.issuetype}}']]]

                response = jiraNewIssue issue: testIssue,site: env.JIRA_SITE
                echo response.data.toString()
                {{- end}}

                {{if .EnableMail -}}
                NOTIFICATIONS = """{{.Notifications}}"""
                DETAILS = """{{.Content}}"""
                def notice = """{"apiVersion":"aiops.alauda.io/v1beta1","kind":"NotificationMessage","metadata":{"name":"${BUILD_TIMESTAMP}","namespace":"alauda-system"},"spec":{"body":{"details": ${DETAILS}},"notifications": ${NOTIFICATIONS}}}"""
                alaudaDevops.withCluster(){alaudaDevops.withProject('alauda-system'){alaudaDevops.create(notice)}}
                {{- end}}


                throw err
            }
        }
    }
  arguments:
    - name: "imageRepository"
      schema:
        type: string
      display:
        type: string
        name:
          zh-CN: "镜像仓库"
          en: "imageRepository"
        description:
          zh-CN: "格式：host:port/imagename"
          en: "host:port/image"
      required: true
      default: ''
    - name: "imageTag"
      schema:
        type: string
      display:
        type: string
        name:
          zh-CN: "镜像 tag"
          en: "imageTag"
        description:
          zh-CN: "镜像 tag"
          en: "image tag"
      required: true
      default: 'latest'
    - name: "remoteImageAPI"
      schema:
        type: string
      display:
        type: string
        name:
          zh-CN: "镜像上传接口"
          en: "remoteImageAPI"
        description:
          zh-CN: "镜像上传接口，如: https://0.0.0.0:1234/api"
          en: ""
      required: true
      default: ''
    - name: "imageAuthAPI"
      schema:
        type: string
      display:
        type: string
        name:
          zh-CN: "镜像鉴权接口"
          en: "imageAuthAPI"
        description:
          zh-CN: "镜像鉴权接口，如: https://0.0.0.0:1234/api"
          en: ""
      required: true
      default: ''
    - name: "imageAuthDomainName"
      schema:
        type: string
      display:
        type: string
        name:
          zh-CN: "镜像鉴权租户名"
          en: "imageAuthDomainName"
        description:
          zh-CN: "镜像鉴权租户名"
          en: ""
      required: true
      default: 'FusionStageResVDC'
    - name: "imageAuthUserName"
      schema:
        type: string
      display:
        type: string
        name:
          zh-CN: "镜像鉴权用户名"
          en: "imageAuthUserName"
        description:
          zh-CN: "镜像鉴权用户名"
          en: ""
      required: true
      default: 'kf6_admin'
    - name: "imageAuthPassword"
      schema:
        type: string
      display:
        type: string
        name:
          zh-CN: "镜像鉴权密码"
          en: "imageAuthPassword"
        description:
          zh-CN: "镜像鉴权密码"
          en: ""
      required: true
      default: ''
    - name: "dockerfile"
      schema:
        type: string
      display:
        type: string
        name:
          zh-CN: "Dockerfile"
          en: "Dockerfile"
        description:
          zh-CN: "Dockerfile 在代码仓库中的绝对路径"
          en: ""
      required: true
      default: 'Dockerfile'
    - name: "context"
      schema:
        type: string
      display:
        type: string
        name:
          zh-CN: "构建上下文"
          en: "Build Context"
        description:
          zh-CN: "构建过程可以引用上下文中的任何文件。例如，构建中可以使用 COPY 命令在上下文中引用文件"
          en: "The build process can refer to any of the files in the context. For example, your build can use a COPY instruction to reference a file in the context"
      required: false
      default: '.'
    - name: "buildArguments"
      schema:
        type: string
      display:
        type: string
        name:
          zh-CN: "构建参数"
          en: "Build Arguments"
        description:
          zh-CN: "自定义更多的构建参数，对镜像构建进行更详细的配置"
          en: ""
      required: false
      default: ''
    - name: "retry"
      schema:
        type: string
      display:
        type: string
        name:
          zh-CN: "重试次数"
          en: "Retry Times"
        description:
          zh-CN: "生成镜像时的失败重试次数"
          en: ""
      required: false
      default: '3'


    - name: "EnableJira"
      schema:
        type: boolean
      required: false
      display:
        type: boolean
        name:
          zh-CN: "创建JIRA Issue"
          en: "Create JIRA Issue"
        description:
          zh-CN: "创建JIRA Issue"
          en: "Create JIRA Issue"


    - name: "projectKey"
      schema:
        type: string
      display:
        type: string
        name:
          zh-CN: "项目关键字"
          en: "projectKey"
        description:
          zh-CN: "项目关键字"
          en: ""
      required: true
      default: ''
    - name: "description"
      schema:
        type: string
      display:
        type: string
        name:
          zh-CN: "描述"
          en: "description"
        description:
          zh-CN: "描述"
          en: ""
      required: true
      default: ''
    - name: "summary"
      schema:
        type: string
      display:
        type: string
        name:
          zh-CN: "标题"
          en: "summary"
        description:
          zh-CN: "标题"
          en: ""
      required: true
      default: ''
    - name: "issuetype"
      schema:
        type: string
      display:
        type: string
        name:
          zh-CN: "问题类型"
          en: "issuetype"
        description:
          zh-CN: "问题类型"
          en: "issuetype"
      required: true
      default: ''

    - name: "EnableMail"
      schema:
        type: boolean
      required: false
      display:
        type: boolean
        name:
          zh-CN: "邮件通知"
          en: "Send Mail"
        description:
          zh-CN: "邮件通知"
          en: "Send Mail"

    - name: "Notifications"
      schema:
        type: string
      display:
        type: string
        name:
          zh-CN: "通知方法"
          en: "Notification Method"
        description:
          zh-CN: "通知方法"
          en: "Notification Method"
      required: false
      default: '[{"name":"test-mail-notification"}]'

    - name: "Content"
      schema:
        type: string
      display:
        type: string
        name:
          zh-CN: "邮件内容"
          en: "Content"
        description:
          zh-CN: "邮件内容"
          en: "Content"
      required: false
      default: '{"BUILD_TIMESTAMP":"${BUILD_TIMESTAMP}","JOB_BASE_NAME":"${JOB_BASE_NAME}","report_url":"http://www.baidu.task"}'

  dependencies:
    plugins:
      - name: workflow-basic-steps
        version: "2.9"
      - name: docker-workflow
        version: "1.17"
